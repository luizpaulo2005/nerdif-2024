generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  // url      = env("DATABASE_URL") // connection string (elephantsql)
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling (vercel)
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection (vercel)
}

model User {
  id         String      @id @default(uuid())
  name       String
  email      String      @unique
  imageUrl   String
  Submission Submission?
  Team       Team?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Game {
  id   String @id @default(uuid())
  name String
  Team Team[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Team {
  id      String @id @default(uuid())
  name    String
  gameId  String
  ownerId String @unique

  owner User @relation(fields: [ownerId], references: [id])
  game  Game @relation(fields: [gameId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  players Submission[] 
}

model Submission {
  id     String @id @default(uuid())
  status String @default("pending")

  teamId String
  userId String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  team Team @relation(fields: [teamId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id])
}
